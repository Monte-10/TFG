# Generated by Django 4.2.4 on 2023-08-05 18:14

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('genero', models.CharField(max_length=20)),
                ('peso', models.FloatField()),
                ('altura', models.FloatField()),
                ('edad', models.IntegerField()),
                ('medidas_cintura', models.FloatField()),
                ('medidas_caderas', models.FloatField()),
                ('objetivo', models.TextField()),
                ('problemas_salud', models.TextField()),
                ('tension_arterial', models.FloatField()),
                ('azucar_en_sangre', models.FloatField()),
                ('consumo_agua_diario', models.FloatField()),
                ('tipo_dieta', models.CharField(max_length=50)),
                ('ingesta_calorías', models.FloatField()),
                ('estilo_vida', models.CharField(max_length=50)),
                ('otros_objetivos', models.TextField()),
                ('groups', models.ManyToManyField(related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Desafío',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('objetivo', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('video_url', models.URLField()),
                ('descripcion', models.TextField()),
                ('imagen_musculos', models.ImageField(upload_to='musculos/')),
                ('series', models.IntegerField()),
                ('repeticiones', models.IntegerField()),
                ('tiempo', models.DurationField()),
                ('temporizador', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='Entrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('duracion_aproximada', models.DurationField()),
                ('grupos_musculares', models.TextField()),
                ('anotacion', models.TextField()),
                ('fecha', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioDesafio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_completado', models.DateField()),
                ('estado', models.CharField(max_length=50)),
                ('desafio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.desafío')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('tipo_actividad', models.CharField(max_length=50)),
                ('duracion', models.DurationField()),
                ('distancia', models.FloatField()),
                ('calorias_quemadas', models.FloatField()),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='EntrenamientoEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.IntegerField()),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.ejercicio')),
                ('entrenamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.entrenamiento')),
            ],
        ),
        migrations.AddField(
            model_name='entrenamiento',
            name='ejercicios',
            field=models.ManyToManyField(through='application.EntrenamientoEjercicio', to='application.ejercicio'),
        ),
        migrations.AddField(
            model_name='entrenamiento',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.customuser'),
        ),
        migrations.AddField(
            model_name='desafío',
            name='participantes',
            field=models.ManyToManyField(through='application.UsuarioDesafio', to='application.customuser'),
        ),
    ]
